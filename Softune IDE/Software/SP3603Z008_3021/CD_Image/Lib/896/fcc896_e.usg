起動形式  :   fcc896s [オプション指定...] ファイル名 [ファイル名...]

[翻訳制御系オプション]
<オプション>           <意味>                                      <デフォルト>
-c                  :  アセンブルまでの処理を行い，結果を*.objに出
                       力する。
-E                  :  前処理のみを行い，結果を標準出力に出力する。
-P                  :  前処理のみを行い，結果を*.iに出力する。
-S                  :  コンパイルまでの処理を行い，結果を*.asmに出
                       力する。

[プリプロセッサ系オプション]
-B                  :  Ｃ＋＋スタイルのコメント表記を許す。
-C                  :  前処理結果に注釈を残す。
-D  name[=tokens ]  :  マクロnameを定義する。
-H                  :  取り込まれたヘッダファイルのパス名を，標準出
                       力に出力する。
-I  dir             :  検索するヘッダファイルのディレクトリを指定す
                       る。
-U  name            :  マクロnameの定義を取り消す。

[情報出力系オプション]
-cmsg               :  コンパイル処理の完了メッセージを出力する。
-cwno               :  警告レベルのエラー発生時の終了コードを１にする。
-help               :  オプション一覧を標準出力に出力する。
-INF  LINENO        :  アセンブラ・ソースに，対応するＣソースの行番
                       号を挿入する。SRCINと同時に使用できない。
-INF  LIST          :  アセンブルリストを生成する
-INF  SRCIN         :  アセンブラ・ソースに，対応するＣソースを挿入
                       する。LINENOと同時に使用できない。
-INF  STACK[=filename]
                    :  スタック使用量情報ファイルの生成を指定する。
-o  pathname        :  結果をpathnameに出力する。
-V                  :  実行されたコンパイラ・ツールのバージョン情報
                       を，標準出力に出力する。
-w  {0-8}           :  警告メッセージの出力レベルを指定する。          (1)

[言語仕様系オプション]
-J  {a|c|n}         :  コンパイラが解釈する，言語仕様レベルを指定す    (a)
                       る。
-K  NO_REDUCED_TYPE_OPERATION :
                       ANSI規格非準拠仕様を無効にする
-K  NO_REDUCED_TYPE_ARGUMENT :
                       ANSI規格非準拠仕様を無効にする
-K  {FCONST|DCONST} :  接尾語なしの実数定数の型を指定する。            (DCONST)
-K  NOINTLIB        :  割り込み関連関数をインライン展開しない。
-K  NOVOLATILE      :  __io 指定時に、volatile と見なさない。
-K  REALOS          :  ITRON システムコール関数をインライン展開する
-K  {SBIT|UBIT}     :  単なるintのビットフィールドの符合を指定する。   (UBIT)
-K  {SCHAR|UCHAR}   :  単なるchar の符合を指定する。                   (UCHAR)
-kanji  {EUC|SJIS}  :  コンパイラが認識する漢字コ−ドを指定する。      (SJIS)

[最適化系オプション]
-K  {SIZE|SPEED}    :  サイズ／速度重視最適化を選択する。
-O  [0-4]           :  汎用最適化を指示する。                          (2)
-K  ADDSP           :  実引数領域の解放をまとめて行なう。
-K  EOPT            :  演算の評価方法を変更する最適化を行なう。
-K  LIB             :  標準関数の動作を認識してinline展開／他の関数
                       への置換えを行なう。
-K  NOALIAS         :  異なるポインタは同一領域を指さないとして最適
                       化する。
-K  NOUNROLL        :  ループアンローリング最適化を抑止する。
-x  func[,fun2...]  :  関数のインライン展開を指定する。
-xauto  [size]      :  論理行がsize行以下の関数をインライン展開の対    (30)
                       象とする。

[出力オブジェクト系オプション]
-cpu MB91***        :  cpu を指定する。                               (MB89600)
-s  defname=newname[,attr[,address]]
                    :  セクション名を変更する。

[デバッグ情報系オプション]
-g                  :  デバッグに必要な情報をオブジェクトに追加する

[コマンド系オプション]
-T  item,arg1[,arg2,...]
                    :  ツールにアーギュメントを渡す。
-Y  item,dir        :  itemの位置をdirに変更する。

[[リンカ系オプション]
-e  name            :  エントリーを指定する。                         (start)
-L  path1[,path2,...]
                    :  ライブラリパスを指定する。                   ($LIB896)
-l  lib1[,lib2,...] :  ライブラリファイル名を指定する。
-m                  :  map ファイルを出力する。
-ra  param          :  RAM 領域を指定する。
-ro  param          :  ROM 領域を指定する。
-sc  param          :  セクション配置を指定する。         (IOPORT=0,*=0x1000)
-startup  file      :  スタートアップファイル名を指定する。
                                                ($FETOOL/lib/896/startup.obj)
[オプションファイル系オプション]
-f  filename        :  オプションファイルを指定する。
-Xdof               :  デフォルトオプションファイルの読み込みを抑止
                       する。

<注意事項>
        fcc896s は、以下のライブラリおよびスタートアップルーチンをリンク
        します。
        (${LIB896}/lib896.lib,${LIB896}/startup.obj)

        item には p,c,a,l のいずれかが設定でき、それぞれ cpps,ccoms,
        fasm896s,flnk896s を意味します。

        cpps でのヘッダファイルの検索順序は、二重引用符（"）に囲まれた
        名前を持つ #include ファイルが、#include の行を持つファイルの
        ディレクトリの中で最初に検索され、次に -I オプションで指定され
        たディレクトリの中が検索され、最後に標準リストの中のディレクト
        リが検索されます。<> で囲まれた名前の #include ファイルの場合、
        #include 行を持つファイルのディレクトリは検索されません。

        コマンドラインのすべてのオプションを処理した後にコンパイル作業
        を行ないます。

        同一のオプション、あるいはそれを取り消すオプションを記述した場
        合、最後のオプションが有効になります。-D/-Uについては、マニュア
        ルを参照して下さい。

        実行を制御するオプションは、-E/-P/-S/-c の順で有効となります。
